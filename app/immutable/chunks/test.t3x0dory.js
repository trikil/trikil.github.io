import{h as Ee,b as Ht,a as Be,c as ze,H as Ne,d as St,s as Pe,e as Ue,f as Ye,g as t,i as e,r as a,n as u,j as Ve,t as We}from"./disclose-version.D1o9HHyg.js";import{b as Ge,a as Je,d as Ke}from"./runtime.Dwmqbxz4.js";function jt(h,p,pt,st,lt){var s=h,o="",n;Ge(()=>{o!==(o=p())&&(n&&(Ke(n),n=null),o!==""&&(n=Je(()=>{if(Ee){Ht.data;for(var r=Be(),l=r;r!==null&&(r.nodeType!==8||r.data!=="");)l=r,r=r.nextSibling;if(r===null)throw ze(),Ne;St(Ht,l),s=Pe(r);return}var d=o+"",i=Ue(d);St(i.firstChild,i.lastChild),s.before(i)})))})}var Qe=We(`<h1>h1 Heading 8-)</h1> <h2>h2 Heading</h2> <h3>h3 Heading</h3> <h4>h4 Heading</h4> <h5>h5 Heading</h5> <h6>h6 Heading</h6> <h2>Horizontal Rules</h2> <hr> <hr> <hr> <h2>Typographic replacements</h2> <p>Enable typographer option to see result.</p> <p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p> <p>test.. test... test..... test?..... test!....</p> <p>!!!!!! ???? ,, -- ---</p> <p>"Smartypants, double quotes" and 'single quotes'</p> <h2>Emphasis</h2> <p><strong>This is bold text</strong></p> <p><strong>This is bold text</strong></p> <p><em>This is italic text</em></p> <p><em>This is italic text</em></p> <p><del>Strikethrough</del></p> <h2>Blockquotes</h2> <blockquote><p>Blockquotes can also be nested...</p> <blockquote><p>...by using additional greater-than signs right next to each other...</p> <blockquote><p>...or with spaces between arrows.</p></blockquote></blockquote></blockquote> <h2>Lists</h2> <p>Unordered</p> <ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li> <li>Sub-lists are made by indenting 2 spaces: <ul><li>Marker character change forces new list start: <ul><li>Ac tristique libero volutpat at</li></ul> <ul><li>Facilisis in pretium nisl aliquet</li></ul> <ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li> <li>Very easy!</li></ul> <p>Ordered</p> <ol><li><p>Lorem ipsum dolor sit amet</p></li> <li><p>Consectetur adipiscing elit</p></li> <li><p>Integer molestie lorem at massa</p></li> <li><p>You can use sequential numbers...</p></li> <li><p>...or keep all the numbers as <code>1.</code></p></li></ol> <p>Start numbering with offset:</p> <ol start="57"><li>foo</li> <li>bar</li></ol> <h2>Code</h2> <p>Inline <code>code</code></p> <p>Indented code</p> <p>// Some comments
line 1 of code
line 2 of code
line 3 of code</p> <p>Block code "fences"</p> <pre class="language-undefined"><!></pre> <p>Syntax highlighting</p> <pre class="language-js"><!></pre> <h2>Tables</h2> <table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table> <p>Right aligned columns</p> <table><thead><tr><th align="right">Option</th><th align="right">Description</th></tr></thead><tbody><tr><td align="right">data</td><td align="right">path to data files to supply the data that will be passed into templates.</td></tr><tr><td align="right">engine</td><td align="right">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td align="right">ext</td><td align="right">extension to be used for dest files.</td></tr></tbody></table> <h2>Links</h2> <p><a href="http://dev.nodeca.com" rel="nofollow">link text</a></p> <p><a href="http://nodeca.github.io/pica/demo/" title="title text!" rel="nofollow">link with title</a></p> <p>Autoconverted link <a href="https://github.com/nodeca/pica" rel="nofollow">https://github.com/nodeca/pica</a> (enable linkify to see)</p> <h2>Images</h2> <p><img src="https://octodex.github.com/images/minion.png" alt="Minion"> <img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p> <p>Like links, Images also have a footnote style syntax</p> <p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p> <p>With a reference later in the document defining the URL location:</p> <h2>Plugins</h2> <p>The killer feature of <code>markdown-it</code> is very effective support of <a href="https://www.npmjs.org/browse/keyword/markdown-it-plugin" rel="nofollow">syntax plugins</a>.</p> <h3><a href="https://github.com/markdown-it/markdown-it-emoji" rel="nofollow">Emojies</a></h3> <blockquote><p>Classic markup: :wink: :cry: :laughing: :yum:</p> <p>Shortcuts (emoticons): :-) :-( 8-) ;)</p></blockquote> <p>see <a href="https://github.com/markdown-it/markdown-it-emoji#change-output" rel="nofollow">how to change output</a> with twemoji.</p> <h3><a href="https://github.com/markdown-it/markdown-it-sub" rel="nofollow">Subscript</a> / <a href="https://github.com/markdown-it/markdown-it-sup" rel="nofollow">Superscript</a></h3> <ul><li>19^th^</li> <li>H~2~O</li></ul> <h3><a href="https://github.com/markdown-it/markdown-it-ins" rel="nofollow">\\<ins></ins></a></h3> <p>++Inserted text++</p> <h3><a href="https://github.com/markdown-it/markdown-it-mark" rel="nofollow">\\<mark></mark></a></h3> <p>==Marked text==</p> <h3><a href="https://github.com/markdown-it/markdown-it-footnote" rel="nofollow">Footnotes</a></h3> <p>Footnote 1 link[^first].</p> <p>Footnote 2 link[^second].</p> <p>Inline footnote^[Text of inline footnote] definition.</p> <p>Duplicated footnote reference[^second].</p> <p>[^first]: Footnote <strong>can have markup</strong></p> <p>and multiple paragraphs.</p> <p>[^second]: Footnote text.</p> <h3><a href="https://github.com/markdown-it/markdown-it-deflist" rel="nofollow">Definition lists</a></h3> <p>Term 1</p> <span>A</span> <p>: Definition 1
with lazy continuation.</p> <p>Term 2 with <em>inline markup</em></p> <p>: Definition 2</p> <p>( some code, part of Definition 2 )</p> <p>Third paragraph of definition 2.</p> <p><em>Compact style:</em></p> <p>Term 1
~ Definition 1</p> <p>Term 2
~ Definition 2a
~ Definition 2b</p> <h3><a href="https://github.com/markdown-it/markdown-it-abbr" rel="nofollow">Abbreviations</a></h3> <p>This is HTML abbreviation example.</p> <p>It converts "HTML", but keep intact partial entries like "xxxHTMLyyy" and so on.</p> <p>*[HTML]: Hyper Text Markup Language</p> <h3><a href="https://github.com/markdown-it/markdown-it-container" rel="nofollow">Custom containers</a></h3> <p>::: warning <em>here be dragons</em> :::</p>`,1);function $e(h){var p=Qe(),pt=Ye(p),st=t(t(pt,!0)),lt=t(t(st,!0)),s=t(t(lt,!0)),o=t(t(s,!0)),n=t(t(o,!0)),r=t(t(n,!0)),l=t(t(r,!0)),d=t(t(l,!0)),i=t(t(d,!0)),Dt=t(t(i,!0)),Lt=t(t(Dt,!0)),Ct=t(t(Lt,!0)),It=t(t(Ct,!0)),Mt=t(t(It,!0)),Rt=t(t(Mt,!0)),At=t(t(Rt,!0)),c=t(t(At,!0));e(c),a(c);var v=t(t(c,!0));e(v),a(v);var m=t(t(v,!0));e(m),a(m);var _=t(t(m,!0));e(_),a(_);var g=t(t(_,!0));e(g),a(g);var Ft=t(t(g,!0)),f=t(t(Ft,!0)),Ot=e(f),ut=t(t(Ot,!0)),Et=e(ut),ht=t(t(Et,!0));e(ht),a(ht),a(ut),a(f);var Bt=t(t(f,!0)),zt=t(t(Bt,!0)),k=t(t(zt,!0)),b=e(k),Nt=t(e(b)),Pt=t(t(Nt,!0));t(t(Pt,!0)),a(b);var w=t(t(b,!0)),dt=t(e(w)),ct=e(dt),y=t(e(ct));e(y),a(y);var T=t(t(y,!0));e(T),a(T);var vt=t(t(T,!0));e(vt),a(vt),a(ct),a(dt),a(w),t(t(w,!0)),a(k);var Ut=t(t(k,!0)),x=t(t(Ut,!0)),q=e(x);e(q),a(q);var H=t(t(q,!0));e(H),a(H);var S=t(t(H,!0));e(S),a(S);var j=t(t(S,!0));e(j),a(j);var mt=t(t(j,!0)),_t=e(mt);t(e(_t)),a(_t),a(mt),a(x);var Yt=t(t(x,!0)),D=t(t(Yt,!0)),Vt=e(D);t(t(Vt,!0)),a(D);var Wt=t(t(D,!0)),L=t(t(Wt,!0));t(e(L)),a(L);var Gt=t(t(L,!0)),Jt=t(t(Gt,!0)),Kt=t(t(Jt,!0)),C=t(t(Kt,!0)),Qt=e(C);jt(Qt,()=>'<code class="language-undefined">Sample text here...</code>'),a(C);var Xt=t(t(C,!0)),I=t(t(Xt,!0)),Zt=e(I);jt(Zt,()=>`<code class="language-js"><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`),a(I);var $t=t(t(I,!0)),M=t(t($t,!0)),R=e(M),gt=e(R),te=e(gt);t(te),a(gt),a(R);var ft=t(R),A=e(ft),ee=e(A);t(ee),a(A);var F=t(A),ae=e(F);t(ae),a(F);var kt=t(F),re=e(kt);t(re),a(kt),a(ft),a(M);var oe=t(t(M,!0)),O=t(t(oe,!0)),E=e(O),bt=e(E),ne=e(bt);t(ne),a(bt),a(E);var wt=t(E),B=e(wt),ie=e(B);t(ie),a(B);var z=t(B),pe=e(z);t(pe),a(z);var yt=t(z),se=e(yt);t(se),a(yt),a(wt),a(O);var le=t(t(O,!0)),N=t(t(le,!0));e(N),a(N);var P=t(t(N,!0));e(P),a(P);var U=t(t(P,!0));t(e(U)),u(),a(U);var ue=t(t(U,!0)),Y=t(t(ue,!0)),he=e(Y);t(t(he,!0)),a(Y);var de=t(t(Y,!0)),V=t(t(de,!0));e(V),a(V);var ce=t(t(V,!0)),ve=t(t(ce,!0)),W=t(t(ve,!0)),me=t(e(W));t(t(me,!0)),u(),a(W);var G=t(t(W,!0));e(G),a(G);var J=t(t(G,!0)),_e=e(J);t(t(_e,!0)),a(J);var K=t(t(J,!0));t(e(K)),u(),a(K);var Q=t(t(K,!0)),ge=e(Q);t(t(ge,!0)),a(Q);var X=t(t(Q,!0)),fe=e(X);t(t(fe,!0)),a(X);var Z=t(t(X,!0)),Tt=e(Z);t(e(Tt)),a(Tt),a(Z);var ke=t(t(Z,!0)),$=t(t(ke,!0)),xt=e($);t(e(xt)),a(xt),a($);var be=t(t($,!0)),tt=t(t(be,!0));e(tt),a(tt);var we=t(t(tt,!0)),ye=t(t(we,!0)),Te=t(t(ye,!0)),xe=t(t(Te,!0)),et=t(t(xe,!0));t(e(et)),a(et);var qe=t(t(et,!0)),He=t(t(qe,!0)),at=t(t(He,!0));e(at),a(at);var Se=t(t(at,!0)),je=t(t(Se,!0)),De=t(t(je,!0)),rt=t(t(De,!0));t(e(rt)),a(rt);var Le=t(t(rt,!0)),Ce=t(t(Le,!0)),Ie=t(t(Ce,!0)),ot=t(t(Ie,!0));e(ot),a(ot);var Me=t(t(ot,!0)),Re=t(t(Me,!0)),nt=t(t(Re,!0));e(nt),a(nt);var Ae=t(t(nt,!0)),Fe=t(t(Ae,!0)),Oe=t(t(Fe,!0)),it=t(t(Oe,!0));e(it),a(it);var qt=t(t(it,!0));t(e(qt)),u(),a(qt),Ve(h,p)}export{$e as default};
